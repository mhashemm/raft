syntax = "proto3";
option go_package = "github.com/mhashemm/raft/main";
package main;

message RequestVoteRequest {
  uint64 term = 1;
  string candidateId = 2;
  uint64 lastLogIndex = 3;
  uint64 lastLogTerm = 4;
}
message RequestVoteResponse {
  uint64 term = 1;
  bool voteGranted = 2;
}

message ClusterChange {
  message Peer {
    string id = 1;
    string target = 2;
  }
	repeated Peer cluster = 1;
	bool disabled = 2;
}

message AppendEntriesRequest {
  enum Type {
    Command = 0;
    ClusterChange = 1;
  }
  uint64 term = 1;
  string leaderId = 2;
  uint64 prevLogIndex = 3;
  uint64 prevLogTerm = 4;
  repeated bytes entries = 5;
  uint64 leaderCommit = 6;
  Type type = 7;
}
message AppendEntriesResponse {
  uint64 term = 1;
  bool success = 2;
}

service raft {
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse) {}
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);

  // called by clients to the leader
  rpc LeaderAppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
}