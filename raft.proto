// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=require_unimplemented_servers=false:. --go-grpc_opt=paths=source_relative raft.proto

syntax = "proto3";
option go_package = "github.com/mhashemm/raft/main";
package main;

message RequestVoteRequest {
  uint64 term = 1;
  string candidateId = 2;
  uint64 lastLogIndex = 3;
  uint64 lastLogTerm = 4;
}
message RequestVoteResponse {
  uint64 term = 1;
  bool voteGranted = 2;
}

message AppendEntriesRequest {
  uint64 term = 1;
  string leaderId = 2;
  uint64 prevLogIndex = 3;
	uint64 prevLogTerm = 4;
  repeated bytes entries = 5;
  uint64 leaderCommit = 6;
}
message AppendEntriesResponse {
  uint64 term = 1;
  bool success = 2;
}

service raft {
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse) {}
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
}